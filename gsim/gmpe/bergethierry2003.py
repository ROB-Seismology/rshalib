# -*- coding: iso-Latin-1 -*-
"""
Berge-Thierry et al (2003) GMPE
"""

from __future__ import absolute_import, division, print_function, unicode_literals


import numpy as np
from scipy.constants import g

from ...utils import interpolate
from .base import *



__all__ = ['BergeThierry2003GMPE']


class BergeThierry2003GMPE(GMPE):
	"""
	Berge-Thierry et al. (2003)
		Magnitude scale: MS
		Magnitude range: 4 - 7.9
		Distance metric: Hypocentral
		Distance range: 4 - 330 km
		Intensity measure types: (P)SA (PGA ~ SA at 34 Hz, 5% damping)
		Original IMT unit: cm/s2 (not explicitly mentioned in paper!)
		SA period range: 0.0294 - 10 s
		Dampings for SA: 5, 7, 10, 20
		Soil classes:
			rock (vs30 >= 800 m/s)
			alluvium (300 <= vs30 < 800 m/s)
		Fault types: None
	"""
	def __init__(self):
		freqs = np.array([1.0000E-001, 1.1100E-001, 1.2500E-001, 1.4300E-001,
						1.6700E-001, 1.8200E-001, 2.0000E-001, 2.2200E-001,
						2.5000E-001, 2.6300E-001, 2.7800E-001, 2.9400E-001,
						3.0000E-001, 3.1200E-001, 3.3300E-001, 3.5700E-001,
						3.8500E-001, 4.0000E-001, 4.1700E-001, 4.5500E-001,
						5.0000E-001, 5.5600E-001, 6.0000E-001, 6.2500E-001,
						6.6700E-001, 7.0000E-001, 7.1400E-001, 7.6900E-001,
						8.0000E-001, 8.3300E-001, 9.0000E-001, 9.0900E-001,
						1.0000E+000, 1.1000E+000, 1.1110E+000, 1.1760E+000,
						1.2000E+000, 1.2500E+000, 1.3000E+000, 1.3330E+000,
						1.4000E+000, 1.4290E+000, 1.4710E+000, 1.5000E+000,
						1.5150E+000, 1.5620E+000, 1.6000E+000, 1.6130E+000,
						1.6670E+000, 1.7000E+000, 1.7240E+000, 1.7860E+000,
						1.8000E+000, 1.8520E+000, 1.9000E+000, 1.9230E+000,
						2.0000E+000, 2.0830E+000, 2.1000E+000, 2.1740E+000,
						2.2000E+000, 2.2730E+000, 2.3000E+000, 2.3810E+000,
						2.4000E+000, 2.5000E+000, 2.6000E+000, 2.6320E+000,
						2.7000E+000, 2.7780E+000, 2.8000E+000, 2.9000E+000,
						2.9410E+000, 3.0000E+000, 3.1250E+000, 3.1550E+000,
						3.3000E+000, 3.3330E+000, 3.4480E+000, 3.5710E+000,
						3.6000E+000, 3.8000E+000, 3.8500E+000, 4.0000E+000,
						4.1670E+000, 4.2000E+000, 4.4000E+000, 4.5500E+000,
						4.6000E+000, 4.8000E+000, 5.0000E+000, 5.2500E+000,
						5.2630E+000, 5.5000E+000, 5.5560E+000, 5.7500E+000,
						5.8820E+000, 6.0000E+000, 6.2500E+000, 6.5000E+000,
						6.6670E+000, 6.7500E+000, 7.0000E+000, 7.1430E+000,
						7.2500E+000, 7.5000E+000, 7.6920E+000, 7.7500E+000,
						8.0000E+000, 8.3330E+000, 8.5000E+000, 9.0000E+000,
						9.0910E+000, 9.5000E+000, 1.0000E+001, 1.0500E+001,
						1.1000E+001, 1.1111E+001, 1.1500E+001, 1.1765E+001,
						1.2000E+001, 1.2500E+001, 1.3000E+001, 1.3333E+001,
						1.3500E+001, 1.4000E+001, 1.4286E+001, 1.4500E+001,
						1.5000E+001, 1.5385E+001, 1.6000E+001, 1.6667E+001,
						1.7000E+001, 1.8000E+001, 1.8868E+001, 2.0000E+001,
						2.2000E+001, 2.5000E+001, 2.8000E+001, 2.9412E+001,
						3.1000E+001, 3.3333E+001, 3.4000E+001])
		imt_periods = {}
		imt_periods["SA"] = 1./freqs
		distance_metric = "Hypocentral"
		Mmin, Mmax = 4, 7.9
		dmin, dmax = 4., 330.
		Mtype = "MS"
		dampings = [5, 7, 10, 20]
		name = "Berge-Thierry2003"
		short_name = "BT_2003"
		GMPE.__init__(self, imt_periods, distance_metric, Mmin, Mmax, dmin, dmax,
					Mtype, dampings, name, short_name)

		## Coefficients
		self.a = np.zeros((len(self.dampings), len(freqs)), 'd')
		self.b = np.zeros((len(self.dampings), len(freqs)), 'd')
		self.c1 = np.zeros((len(self.dampings), len(freqs)), 'd')
		self.c2 = np.zeros((len(self.dampings), len(freqs)), 'd')
		self.sigma = np.zeros((len(self.dampings), len(freqs)), 'd')
		for i in range(len(self.dampings)):
			if i == 0:
				self.a[i] = [6.0860E-001, 6.1220E-001, 6.1450E-001, 6.1750E-001,
							6.1600E-001, 6.1060E-001, 5.9900E-001, 5.8560E-001,
							5.7220E-001, 5.7120E-001, 5.7270E-001, 5.7150E-001,
							5.7050E-001, 5.6860E-001, 5.6830E-001, 5.6660E-001,
							5.6770E-001, 5.6540E-001, 5.6410E-001, 5.6170E-001,
							5.6220E-001, 5.6200E-001, 5.5800E-001, 5.5570E-001,
							5.5270E-001, 5.4940E-001, 5.4810E-001, 5.4440E-001,
							5.4090E-001, 5.3610E-001, 5.2780E-001, 5.2730E-001,
							5.1990E-001, 5.1040E-001, 5.0980E-001, 5.0400E-001,
							5.0100E-001, 4.9400E-001, 4.8750E-001, 4.8470E-001,
							4.7710E-001, 4.7320E-001, 4.6880E-001, 4.6550E-001,
							4.6370E-001, 4.5960E-001, 4.5690E-001, 4.5590E-001,
							4.5160E-001, 4.4920E-001, 4.4720E-001, 4.4250E-001,
							4.4180E-001, 4.3940E-001, 4.3790E-001, 4.3720E-001,
							4.3230E-001, 4.2390E-001, 4.2220E-001, 4.1650E-001,
							4.1480E-001, 4.0890E-001, 4.0700E-001, 4.0340E-001,
							4.0280E-001, 3.9970E-001, 3.9310E-001, 3.9090E-001,
							3.8670E-001, 3.8220E-001, 3.8070E-001, 3.7600E-001,
							3.7520E-001, 3.7420E-001, 3.6900E-001, 3.6710E-001,
							3.6020E-001, 3.5900E-001, 3.5550E-001, 3.5110E-001,
							3.5010E-001, 3.4420E-001, 3.4300E-001, 3.3650E-001,
							3.3440E-001, 3.3400E-001, 3.3030E-001, 3.2710E-001,
							3.2540E-001, 3.1960E-001, 3.1670E-001, 3.1490E-001,
							3.1470E-001, 3.1090E-001, 3.0890E-001, 3.0160E-001,
							2.9740E-001, 2.9520E-001, 2.9390E-001, 2.9550E-001,
							2.9550E-001, 2.9500E-001, 2.9330E-001, 2.9150E-001,
							2.9030E-001, 2.8870E-001, 2.8670E-001, 2.8630E-001,
							2.8310E-001, 2.8060E-001, 2.7930E-001, 2.7830E-001,
							2.7830E-001, 2.7760E-001, 2.7860E-001, 2.7810E-001,
							2.8090E-001, 2.8190E-001, 2.8480E-001, 2.8560E-001,
							2.8580E-001, 2.8660E-001, 2.8570E-001, 2.8710E-001,
							2.8790E-001, 2.9090E-001, 2.9200E-001, 2.9240E-001,
							2.9330E-001, 2.9440E-001, 2.9650E-001, 2.9600E-001,
							2.9600E-001, 2.9690E-001, 2.9810E-001, 2.9920E-001,
							3.0160E-001, 3.0330E-001, 3.0680E-001, 3.0830E-001,
							3.0970E-001, 3.1140E-001, 3.1180E-001]
				self.b[i] = [1.5630E-003, 1.6370E-003, 1.7210E-003, 1.7660E-003,
							1.8800E-003, 1.9410E-003, 2.1050E-003, 2.4490E-003,
							2.7110E-003, 2.6620E-003, 2.5730E-003, 2.5410E-003,
							2.5330E-003, 2.5360E-003, 2.4490E-003, 2.2770E-003,
							2.0060E-003, 1.9210E-003, 1.8290E-003, 1.6520E-003,
							1.3750E-003, 1.2450E-003, 1.0850E-003, 9.8440E-004,
							9.1240E-004, 8.2720E-004, 7.6760E-004, 5.3290E-004,
							4.8600E-004, 4.4790E-004, 4.0740E-004, 3.9080E-004,
							2.5160E-004, 8.3930E-005, 3.2820E-005, -1.4330E-004,
							-1.9320E-004, -2.5680E-004, -3.1220E-004, -3.0090E-004,
							-2.0190E-004, -1.7000E-004, -1.6680E-004, -1.5500E-004,
							-1.5490E-004, -1.6660E-004, -1.9950E-004, -1.9530E-004,
							-2.1750E-004, -2.5220E-004, -2.7020E-004, -3.3800E-004,
							-3.6010E-004, -4.3300E-004, -5.0500E-004, -5.3960E-004,
							-5.6800E-004, -5.4840E-004, -5.4040E-004, -5.8160E-004,
							-5.9310E-004, -6.1180E-004, -6.1670E-004, -6.5130E-004,
							-6.6130E-004, -7.0780E-004, -7.9550E-004, -8.0740E-004,
							-8.6350E-004, -9.0390E-004, -9.1140E-004, -9.6980E-004,
							-1.0060E-003, -1.0100E-003, -9.4680E-004, -9.2720E-004,
							-8.7370E-004, -8.5200E-004, -7.8360E-004, -7.5300E-004,
							-7.5200E-004, -7.2000E-004, -7.0750E-004, -5.7500E-004,
							-5.9880E-004, -6.1710E-004, -6.6780E-004, -6.9180E-004,
							-6.7500E-004, -6.7190E-004, -6.8890E-004, -7.3370E-004,
							-7.3690E-004, -7.8260E-004, -7.7930E-004, -7.3410E-004,
							-6.9860E-004, -7.0970E-004, -8.0560E-004, -1.0520E-003,
							-1.2180E-003, -1.2560E-003, -1.3070E-003, -1.3220E-003,
							-1.3380E-003, -1.3970E-003, -1.4250E-003, -1.4400E-003,
							-1.4150E-003, -1.4360E-003, -1.4380E-003, -1.4380E-003,
							-1.4420E-003, -1.4220E-003, -1.4740E-003, -1.5430E-003,
							-1.5280E-003, -1.5360E-003, -1.5710E-003, -1.5830E-003,
							-1.5520E-003, -1.5310E-003, -1.5200E-003, -1.5400E-003,
							-1.5550E-003, -1.5830E-003, -1.5700E-003, -1.5460E-003,
							-1.5130E-003, -1.5150E-003, -1.5070E-003, -1.4720E-003,
							-1.4600E-003, -1.4320E-003, -1.4290E-003, -1.3410E-003,
							-1.2820E-003, -1.1190E-003, -9.8220E-004, -9.5470E-004,
							-9.4220E-004, -9.3340E-004, -9.3030E-004]
				self.c1[i] = [-2.6680E+000, -2.5920E+000, -2.4910E+000, -2.3730E+000,
							-2.2010E+000, -2.0720E+000, -1.8860E+000, -1.6620E+000,
							-1.4170E+000, -1.3500E+000, -1.3000E+000, -1.2430E+000,
							-1.2200E+000, -1.1790E+000, -1.1300E+000, -1.0710E+000,
							-1.0190E+000, -9.7870E-001, -9.4060E-001, -8.6560E-001,
							-7.9630E-001, -7.2580E-001, -6.5640E-001, -6.1860E-001,
							-5.6040E-001, -5.0950E-001, -4.8700E-001, -4.1130E-001,
							-3.6790E-001, -3.1330E-001, -2.2070E-001, -2.1230E-001,
							-1.1620E-001, 8.1950E-003, 2.0060E-002, 9.6150E-002,
							1.2640E-001, 1.9060E-001, 2.5450E-001, 2.8710E-001,
							3.5480E-001, 3.8570E-001, 4.2840E-001, 4.5730E-001,
							4.7250E-001, 5.1060E-001, 5.3830E-001, 5.4780E-001,
							5.8950E-001, 6.1570E-001, 6.3570E-001, 6.8440E-001,
							6.9410E-001, 7.2710E-001, 7.5220E-001, 7.6420E-001,
							8.1500E-001, 8.7950E-001, 8.9310E-001, 9.4400E-001,
							9.6010E-001, 1.0110E+000, 1.0290E+000, 1.0700E+000,
							1.0780E+000, 1.1190E+000, 1.1790E+000, 1.1990E+000,
							1.2370E+000, 1.2750E+000, 1.2860E+000, 1.3260E+000,
							1.3370E+000, 1.3520E+000, 1.3970E+000, 1.4120E+000,
							1.4660E+000, 1.4770E+000, 1.5060E+000, 1.5420E+000,
							1.5500E+000, 1.5990E+000, 1.6090E+000, 1.6510E+000,
							1.6770E+000, 1.6830E+000, 1.7260E+000, 1.7580E+000,
							1.7700E+000, 1.8140E+000, 1.8430E+000, 1.8670E+000,
							1.8680E+000, 1.9010E+000, 1.9150E+000, 1.9570E+000,
							1.9780E+000, 1.9890E+000, 1.9960E+000, 1.9970E+000,
							2.0040E+000, 2.0090E+000, 2.0180E+000, 2.0270E+000,
							2.0320E+000, 2.0400E+000, 2.0500E+000, 2.0520E+000,
							2.0660E+000, 2.0760E+000, 2.0810E+000, 2.0770E+000,
							2.0750E+000, 2.0720E+000, 2.0590E+000, 2.0540E+000,
							2.0200E+000, 2.0110E+000, 1.9870E+000, 1.9760E+000,
							1.9680E+000, 1.9540E+000, 1.9470E+000, 1.9330E+000,
							1.9260E+000, 1.9010E+000, 1.8880E+000, 1.8810E+000,
							1.8650E+000, 1.8510E+000, 1.8260E+000, 1.8140E+000,
							1.8090E+000, 1.7850E+000, 1.7660E+000, 1.7400E+000,
							1.7010E+000, 1.6530E+000, 1.5930E+000, 1.5730E+000,
							1.5580E+000, 1.5410E+000, 1.5370E+000]
				self.c2[i] = [-2.4850E+000, -2.4080E+000, -2.3080E+000, -2.1920E+000,
							-2.0280E+000, -1.9040E+000, -1.7290E+000, -1.5200E+000,
							-1.3030E+000, -1.2420E+000, -1.1940E+000, -1.1350E+000,
							-1.1110E+000, -1.0690E+000, -1.0140E+000, -9.4950E-001,
							-8.9800E-001, -8.5420E-001, -8.1580E-001, -7.3950E-001,
							-6.6600E-001, -5.8340E-001, -5.0260E-001, -4.5830E-001,
							-3.9350E-001, -3.3850E-001, -3.1550E-001, -2.3770E-001,
							-1.8910E-001, -1.3380E-001, -3.8750E-002, -2.9000E-002,
							8.2900E-002, 2.0220E-001, 2.1300E-001, 2.8420E-001,
							3.1450E-001, 3.7820E-001, 4.3800E-001, 4.6810E-001,
							5.3540E-001, 5.6760E-001, 6.0810E-001, 6.3630E-001,
							6.5200E-001, 6.9100E-001, 7.1870E-001, 7.2820E-001,
							7.6820E-001, 7.9260E-001, 8.1170E-001, 8.5710E-001,
							8.6610E-001, 8.9590E-001, 9.2080E-001, 9.3240E-001,
							9.7970E-001, 1.0450E+000, 1.0580E+000, 1.1090E+000,
							1.1250E+000, 1.1740E+000, 1.1910E+000, 1.2260E+000,
							1.2320E+000, 1.2670E+000, 1.3210E+000, 1.3390E+000,
							1.3720E+000, 1.4050E+000, 1.4150E+000, 1.4520E+000,
							1.4610E+000, 1.4720E+000, 1.5120E+000, 1.5250E+000,
							1.5730E+000, 1.5810E+000, 1.6050E+000, 1.6380E+000,
							1.6450E+000, 1.6880E+000, 1.6970E+000, 1.7360E+000,
							1.7580E+000, 1.7620E+000, 1.7920E+000, 1.8150E+000,
							1.8250E+000, 1.8610E+000, 1.8810E+000, 1.8930E+000,
							1.8940E+000, 1.9190E+000, 1.9300E+000, 1.9700E+000,
							1.9940E+000, 2.0060E+000, 2.0130E+000, 2.0070E+000,
							2.0090E+000, 2.0100E+000, 2.0140E+000, 2.0220E+000,
							2.0280E+000, 2.0330E+000, 2.0400E+000, 2.0420E+000,
							2.0510E+000, 2.0540E+000, 2.0560E+000, 2.0470E+000,
							2.0450E+000, 2.0340E+000, 2.0160E+000, 2.0100E+000,
							1.9810E+000, 1.9730E+000, 1.9460E+000, 1.9350E+000,
							1.9270E+000, 1.9110E+000, 1.9060E+000, 1.8930E+000,
							1.8870E+000, 1.8610E+000, 1.8490E+000, 1.8420E+000,
							1.8290E+000, 1.8170E+000, 1.7960E+000, 1.7880E+000,
							1.7840E+000, 1.7650E+000, 1.7490E+000, 1.7290E+000,
							1.7000E+000, 1.6650E+000, 1.6180E+000, 1.6020E+000,
							1.5890E+000, 1.5760E+000, 1.5730E+000]
				self.sigma[i] = [4.1830E-001, 4.2360E-001, 4.2840E-001, 4.2990E-001,
								4.2840E-001, 4.2600E-001, 4.2330E-001, 4.2780E-001,
								4.3440E-001, 4.3650E-001, 4.3590E-001, 4.3400E-001,
								4.3290E-001, 4.3010E-001, 4.2550E-001, 4.2020E-001,
								4.1300E-001, 4.1100E-001, 4.0930E-001, 4.0550E-001,
								4.0300E-001, 3.9420E-001, 3.9190E-001, 3.9190E-001,
								3.9320E-001, 3.9410E-001, 3.9350E-001, 3.9200E-001,
								3.8770E-001, 3.8380E-001, 3.8040E-001, 3.7940E-001,
								3.7370E-001, 3.7440E-001, 3.7470E-001, 3.7580E-001,
								3.7460E-001, 3.7140E-001, 3.7030E-001, 3.7000E-001,
								3.6800E-001, 3.6670E-001, 3.6550E-001, 3.6490E-001,
								3.6470E-001, 3.6250E-001, 3.6090E-001, 3.6040E-001,
								3.6030E-001, 3.6090E-001, 3.6100E-001, 3.5920E-001,
								3.5870E-001, 3.5740E-001, 3.5700E-001, 3.5680E-001,
								3.5550E-001, 3.5560E-001, 3.5550E-001, 3.5490E-001,
								3.5470E-001, 3.5270E-001, 3.5210E-001, 3.5130E-001,
								3.5120E-001, 3.5170E-001, 3.5070E-001, 3.5000E-001,
								3.4920E-001, 3.4840E-001, 3.4810E-001, 3.4710E-001,
								3.4690E-001, 3.4740E-001, 3.4870E-001, 3.4910E-001,
								3.4830E-001, 3.4770E-001, 3.4580E-001, 3.4470E-001,
								3.4440E-001, 3.4290E-001, 3.4220E-001, 3.3940E-001,
								3.3710E-001, 3.3670E-001, 3.3200E-001, 3.2920E-001,
								3.2810E-001, 3.2610E-001, 3.2500E-001, 3.2620E-001,
								3.2620E-001, 3.2710E-001, 3.2670E-001, 3.2470E-001,
								3.2300E-001, 3.2150E-001, 3.2000E-001, 3.2010E-001,
								3.1960E-001, 3.1910E-001, 3.1730E-001, 3.1660E-001,
								3.1610E-001, 3.1560E-001, 3.1420E-001, 3.1370E-001,
								3.1210E-001, 3.1060E-001, 3.1030E-001, 3.0790E-001,
								3.0730E-001, 3.0430E-001, 3.0190E-001, 3.0170E-001,
								3.0160E-001, 3.0200E-001, 3.0420E-001, 3.0530E-001,
								3.0580E-001, 3.0610E-001, 3.0720E-001, 3.0660E-001,
								3.0590E-001, 3.0470E-001, 3.0460E-001, 3.0480E-001,
								3.0590E-001, 3.0590E-001, 3.0470E-001, 3.0410E-001,
								3.0400E-001, 3.0270E-001, 3.0220E-001, 3.0090E-001,
								3.0150E-001, 2.9820E-001, 2.9470E-001, 2.9350E-001,
								2.9280E-001, 2.9240E-001, 2.9230E-001]
			elif i == 1:
				self.a[i] = [6.057000E-01,6.085000E-01,6.105000E-01,6.127000E-01,
							6.105000E-01,6.050000E-01,5.947000E-01,5.828000E-01,
							5.717000E-01,5.705000E-01,5.711000E-01,5.687000E-01,
							5.677000E-01,5.660000E-01,5.655000E-01,5.641000E-01,
							5.654000E-01,5.636000E-01,5.629000E-01,5.601000E-01,
							5.597000E-01,5.595000E-01,5.557000E-01,5.540000E-01,
							5.501000E-01,5.472000E-01,5.457000E-01,5.402000E-01,
							5.371000E-01,5.330000E-01,5.255000E-01,5.248000E-01,
							5.169000E-01,5.080000E-01,5.074000E-01,5.017000E-01,
							4.984000E-01,4.918000E-01,4.856000E-01,4.825000E-01,
							4.749000E-01,4.710000E-01,4.662000E-01,4.634000E-01,
							4.620000E-01,4.580000E-01,4.552000E-01,4.540000E-01,
							4.501000E-01,4.478000E-01,4.457000E-01,4.399000E-01,
							4.390000E-01,4.365000E-01,4.350000E-01,4.339000E-01,
							4.288000E-01,4.223000E-01,4.208000E-01,4.151000E-01,
							4.134000E-01,4.081000E-01,4.064000E-01,4.025000E-01,
							4.016000E-01,3.987000E-01,3.928000E-01,3.907000E-01,
							3.866000E-01,3.824000E-01,3.812000E-01,3.761000E-01,
							3.742000E-01,3.722000E-01,3.667000E-01,3.653000E-01,
							3.600000E-01,3.589000E-01,3.553000E-01,3.510000E-01,
							3.498000E-01,3.431000E-01,3.417000E-01,3.369000E-01,
							3.338000E-01,3.335000E-01,3.298000E-01,3.270000E-01,
							3.255000E-01,3.202000E-01,3.170000E-01,3.146000E-01,
							3.145000E-01,3.098000E-01,3.080000E-01,3.016000E-01,
							2.979000E-01,2.957000E-01,2.941000E-01,2.944000E-01,
							2.945000E-01,2.941000E-01,2.927000E-01,2.912000E-01,
							2.900000E-01,2.882000E-01,2.866000E-01,2.864000E-01,
							2.841000E-01,2.819000E-01,2.809000E-01,2.804000E-01,
							2.806000E-01,2.804000E-01,2.804000E-01,2.803000E-01,
							2.825000E-01,2.833000E-01,2.852000E-01,2.862000E-01,
							2.866000E-01,2.868000E-01,2.868000E-01,2.879000E-01,
							2.888000E-01,2.916000E-01,2.926000E-01,2.932000E-01,
							2.945000E-01,2.954000E-01,2.966000E-01,2.968000E-01,
							2.970000E-01,2.980000E-01,2.991000E-01,3.005000E-01,
							3.028000E-01,3.041000E-01,3.068000E-01,3.080000E-01,
							3.091000E-01,3.106000E-01,3.110000E-01]
				self.b[i] = [1.555000E-03,1.618000E-03,1.700000E-03,1.745000E-03,
							1.846000E-03,1.916000E-03,2.061000E-03,2.341000E-03,
							2.541000E-03,2.504000E-03,2.447000E-03,2.424000E-03,
							2.415000E-03,2.388000E-03,2.295000E-03,2.109000E-03,
							1.859000E-03,1.804000E-03,1.706000E-03,1.524000E-03,
							1.293000E-03,1.120000E-03,9.923000E-04,8.977000E-04,
							8.059000E-04,6.960000E-04,6.340000E-04,4.648000E-04,
							3.997000E-04,3.336000E-04,2.994000E-04,2.890000E-04,
							1.602000E-04,3.432000E-06,-3.176000E-05,-2.118000E-04,
							-2.596000E-04,-3.123000E-04,-3.449000E-04,-3.381000E-04,
							-2.753000E-04,-2.390000E-04,-2.305000E-04,-2.223000E-04,
							-2.211000E-04,-2.413000E-04,-2.575000E-04,-2.537000E-04,
							-2.929000E-04,-3.308000E-04,-3.468000E-04,-3.773000E-04,
							-3.915000E-04,-4.431000E-04,-5.160000E-04,-5.477000E-04,
							-5.909000E-04,-6.366000E-04,-6.445000E-04,-6.885000E-04,
							-7.025000E-04,-7.138000E-04,-7.167000E-04,-7.306000E-04,
							-7.303000E-04,-7.918000E-04,-8.838000E-04,-9.062000E-04,
							-9.418000E-04,-9.608000E-04,-9.697000E-04,-1.015000E-03,
							-1.023000E-03,-1.018000E-03,-9.515000E-04,-9.357000E-04,
							-8.907000E-04,-8.854000E-04,-8.420000E-04,-7.886000E-04,
							-7.816000E-04,-7.346000E-04,-7.123000E-04,-6.353000E-04,
							-6.328000E-04,-6.448000E-04,-6.894000E-04,-7.078000E-04,
							-6.973000E-04,-6.887000E-04,-7.128000E-04,-7.271000E-04,
							-7.291000E-04,-7.540000E-04,-7.478000E-04,-7.050000E-04,
							-6.848000E-04,-6.937000E-04,-7.836000E-04,-9.667000E-04,
							-1.094000E-03,-1.129000E-03,-1.201000E-03,-1.226000E-03,
							-1.241000E-03,-1.289000E-03,-1.311000E-03,-1.317000E-03,
							-1.306000E-03,-1.332000E-03,-1.335000E-03,-1.356000E-03,
							-1.363000E-03,-1.359000E-03,-1.385000E-03,-1.441000E-03,
							-1.444000E-03,-1.448000E-03,-1.458000E-03,-1.456000E-03,
							-1.444000E-03,-1.412000E-03,-1.399000E-03,-1.416000E-03,
							-1.427000E-03,-1.458000E-03,-1.460000E-03,-1.453000E-03,
							-1.435000E-03,-1.425000E-03,-1.414000E-03,-1.395000E-03,
							-1.386000E-03,-1.354000E-03,-1.343000E-03,-1.282000E-03,
							-1.242000E-03,-1.088000E-03,-9.771000E-04,-9.498000E-04,
							-9.382000E-04,-9.287000E-04,-9.264000E-04]
				self.c1[i] = [-2.653000E+00,-2.573000E+00,-2.471000E+00,-2.349000E+00,
							-2.174000E+00,-2.046000E+00,-1.871000E+00,-1.665000E+00,
							-1.444000E+00,-1.378000E+00,-1.325000E+00,-1.261000E+00,
							-1.239000E+00,-1.198000E+00,-1.147000E+00,-1.089000E+00,
							-1.040000E+00,-1.004000E+00,-9.679000E-01,-8.899000E-01,
							-8.192000E-01,-7.459000E-01,-6.783000E-01,-6.433000E-01,
							-5.801000E-01,-5.306000E-01,-5.074000E-01,-4.274000E-01,
							-3.844000E-01,-3.335000E-01,-2.459000E-01,-2.363000E-01,
							-1.367000E-01,-1.704000E-02,-5.691000E-03,6.829000E-02,
							9.968000E-02,1.633000E-01,2.253000E-01,2.583000E-01,
							3.271000E-01,3.585000E-01,4.015000E-01,4.272000E-01,
							4.401000E-01,4.771000E-01,5.058000E-01,5.163000E-01,
							5.573000E-01,5.827000E-01,6.031000E-01,6.570000E-01,
							6.674000E-01,7.003000E-01,7.252000E-01,7.390000E-01,
							7.910000E-01,8.474000E-01,8.594000E-01,9.108000E-01,
							9.270000E-01,9.740000E-01,9.902000E-01,1.030000E+00,
							1.039000E+00,1.080000E+00,1.136000E+00,1.154000E+00,
							1.191000E+00,1.226000E+00,1.235000E+00,1.279000E+00,
							1.295000E+00,1.315000E+00,1.362000E+00,1.373000E+00,
							1.419000E+00,1.429000E+00,1.459000E+00,1.494000E+00,
							1.503000E+00,1.556000E+00,1.567000E+00,1.603000E+00,
							1.632000E+00,1.638000E+00,1.678000E+00,1.707000E+00,
							1.718000E+00,1.759000E+00,1.789000E+00,1.815000E+00,
							1.817000E+00,1.853000E+00,1.864000E+00,1.901000E+00,
							1.921000E+00,1.933000E+00,1.944000E+00,1.951000E+00,
							1.956000E+00,1.959000E+00,1.968000E+00,1.976000E+00,
							1.982000E+00,1.991000E+00,1.999000E+00,2.000000E+00,
							2.009000E+00,2.019000E+00,2.023000E+00,2.018000E+00,
							2.016000E+00,2.011000E+00,2.003000E+00,1.997000E+00,
							1.970000E+00,1.963000E+00,1.944000E+00,1.932000E+00,
							1.924000E+00,1.913000E+00,1.902000E+00,1.890000E+00,
							1.883000E+00,1.860000E+00,1.850000E+00,1.843000E+00,
							1.826000E+00,1.813000E+00,1.795000E+00,1.782000E+00,
							1.776000E+00,1.755000E+00,1.737000E+00,1.712000E+00,
							1.678000E+00,1.637000E+00,1.590000E+00,1.573000E+00,
							1.560000E+00,1.545000E+00,1.541000E+00]
				self.c2[i] = [-2.472000E+00,-2.391000E+00,-2.290000E+00,-2.171000E+00,
							-2.003000E+00,-1.881000E+00,-1.715000E+00,-1.522000E+00,
							-1.326000E+00,-1.265000E+00,-1.214000E+00,-1.149000E+00,
							-1.126000E+00,-1.084000E+00,-1.029000E+00,-9.651000E-01,
							-9.153000E-01,-8.764000E-01,-8.404000E-01,-7.612000E-01,
							-6.854000E-01,-6.035000E-01,-5.256000E-01,-4.853000E-01,
							-4.156000E-01,-3.621000E-01,-3.380000E-01,-2.520000E-01,
							-2.059000E-01,-1.544000E-01,-6.381000E-02,-5.351000E-02,
							5.974000E-02,1.743000E-01,1.845000E-01,2.554000E-01,
							2.867000E-01,3.479000E-01,4.049000E-01,4.358000E-01,
							5.050000E-01,5.373000E-01,5.796000E-01,6.050000E-01,
							6.183000E-01,6.566000E-01,6.856000E-01,6.961000E-01,
							7.349000E-01,7.579000E-01,7.768000E-01,8.275000E-01,
							8.368000E-01,8.669000E-01,8.904000E-01,9.036000E-01,
							9.527000E-01,1.010000E+00,1.022000E+00,1.073000E+00,
							1.089000E+00,1.134000E+00,1.149000E+00,1.183000E+00,
							1.191000E+00,1.226000E+00,1.277000E+00,1.294000E+00,
							1.327000E+00,1.358000E+00,1.366000E+00,1.405000E+00,
							1.419000E+00,1.435000E+00,1.476000E+00,1.486000E+00,
							1.526000E+00,1.534000E+00,1.561000E+00,1.592000E+00,
							1.600000E+00,1.647000E+00,1.656000E+00,1.688000E+00,
							1.714000E+00,1.718000E+00,1.747000E+00,1.768000E+00,
							1.777000E+00,1.809000E+00,1.831000E+00,1.847000E+00,
							1.848000E+00,1.877000E+00,1.888000E+00,1.923000E+00,
							1.943000E+00,1.956000E+00,1.966000E+00,1.966000E+00,
							1.966000E+00,1.967000E+00,1.971000E+00,1.977000E+00,
							1.983000E+00,1.991000E+00,1.996000E+00,1.996000E+00,
							2.002000E+00,2.005000E+00,2.006000E+00,1.996000E+00,
							1.993000E+00,1.982000E+00,1.970000E+00,1.963000E+00,
							1.939000E+00,1.932000E+00,1.912000E+00,1.900000E+00,
							1.893000E+00,1.881000E+00,1.872000E+00,1.861000E+00,
							1.854000E+00,1.831000E+00,1.820000E+00,1.814000E+00,
							1.800000E+00,1.789000E+00,1.774000E+00,1.764000E+00,
							1.759000E+00,1.742000E+00,1.728000E+00,1.709000E+00,
							1.682000E+00,1.652000E+00,1.616000E+00,1.603000E+00,
							1.592000E+00,1.579000E+00,1.576000E+00]
				self.sigma[i] = [4.157000E-01,4.203000E-01,4.244000E-01,4.254000E-01,
							4.233000E-01,4.212000E-01,4.194000E-01,4.229000E-01,
							4.281000E-01,4.297000E-01,4.287000E-01,4.270000E-01,
							4.259000E-01,4.234000E-01,4.190000E-01,4.138000E-01,
							4.073000E-01,4.060000E-01,4.045000E-01,4.006000E-01,
							3.987000E-01,3.919000E-01,3.894000E-01,3.891000E-01,
							3.906000E-01,3.909000E-01,3.904000E-01,3.883000E-01,
							3.846000E-01,3.811000E-01,3.775000E-01,3.768000E-01,
							3.720000E-01,3.719000E-01,3.722000E-01,3.732000E-01,
							3.722000E-01,3.696000E-01,3.681000E-01,3.676000E-01,
							3.658000E-01,3.645000E-01,3.634000E-01,3.628000E-01,
							3.625000E-01,3.607000E-01,3.593000E-01,3.589000E-01,
							3.585000E-01,3.586000E-01,3.585000E-01,3.569000E-01,
							3.565000E-01,3.555000E-01,3.556000E-01,3.555000E-01,
							3.541000E-01,3.536000E-01,3.537000E-01,3.532000E-01,
							3.526000E-01,3.514000E-01,3.511000E-01,3.502000E-01,
							3.500000E-01,3.495000E-01,3.490000E-01,3.485000E-01,
							3.475000E-01,3.470000E-01,3.468000E-01,3.459000E-01,
							3.458000E-01,3.458000E-01,3.464000E-01,3.464000E-01,
							3.456000E-01,3.451000E-01,3.434000E-01,3.418000E-01,
							3.414000E-01,3.397000E-01,3.392000E-01,3.371000E-01,
							3.350000E-01,3.346000E-01,3.307000E-01,3.278000E-01,
							3.270000E-01,3.246000E-01,3.236000E-01,3.237000E-01,
							3.237000E-01,3.232000E-01,3.230000E-01,3.214000E-01,
							3.199000E-01,3.184000E-01,3.170000E-01,3.162000E-01,
							3.161000E-01,3.155000E-01,3.144000E-01,3.133000E-01,
							3.128000E-01,3.120000E-01,3.107000E-01,3.103000E-01,
							3.086000E-01,3.076000E-01,3.072000E-01,3.051000E-01,
							3.048000E-01,3.023000E-01,3.002000E-01,3.003000E-01,
							3.002000E-01,3.004000E-01,3.016000E-01,3.023000E-01,
							3.027000E-01,3.033000E-01,3.034000E-01,3.032000E-01,
							3.028000E-01,3.020000E-01,3.020000E-01,3.021000E-01,
							3.027000E-01,3.029000E-01,3.027000E-01,3.024000E-01,
							3.021000E-01,3.011000E-01,3.001000E-01,2.991000E-01,
							2.990000E-01,2.968000E-01,2.944000E-01,2.934000E-01,
							2.928000E-01,2.924000E-01,2.923000E-01]
			elif i == 2:
				self.a[i] = [6.016000E-01,6.039000E-01,6.055000E-01,6.064000E-01,
							6.036000E-01,5.983000E-01,5.894000E-01,5.800000E-01,
							5.710000E-01,5.693000E-01,5.687000E-01,5.655000E-01,
							5.647000E-01,5.631000E-01,5.620000E-01,5.610000E-01,
							5.622000E-01,5.611000E-01,5.605000E-01,5.577000E-01,
							5.567000E-01,5.565000E-01,5.531000E-01,5.510000E-01,
							5.466000E-01,5.434000E-01,5.418000E-01,5.355000E-01,
							5.321000E-01,5.282000E-01,5.218000E-01,5.211000E-01,
							5.134000E-01,5.041000E-01,5.033000E-01,4.970000E-01,
							4.937000E-01,4.875000E-01,4.829000E-01,4.797000E-01,
							4.721000E-01,4.686000E-01,4.636000E-01,4.607000E-01,
							4.592000E-01,4.549000E-01,4.523000E-01,4.514000E-01,
							4.478000E-01,4.452000E-01,4.430000E-01,4.376000E-01,
							4.367000E-01,4.337000E-01,4.315000E-01,4.302000E-01,
							4.251000E-01,4.195000E-01,4.183000E-01,4.132000E-01,
							4.114000E-01,4.068000E-01,4.054000E-01,4.010000E-01,
							4.003000E-01,3.971000E-01,3.920000E-01,3.901000E-01,
							3.862000E-01,3.822000E-01,3.810000E-01,3.762000E-01,
							3.744000E-01,3.720000E-01,3.670000E-01,3.658000E-01,
							3.605000E-01,3.592000E-01,3.555000E-01,3.518000E-01,
							3.508000E-01,3.444000E-01,3.427000E-01,3.387000E-01,
							3.351000E-01,3.344000E-01,3.305000E-01,3.271000E-01,
							3.261000E-01,3.216000E-01,3.183000E-01,3.153000E-01,
							3.150000E-01,3.099000E-01,3.087000E-01,3.037000E-01,
							3.007000E-01,2.985000E-01,2.961000E-01,2.954000E-01,
							2.948000E-01,2.943000E-01,2.930000E-01,2.923000E-01,
							2.917000E-01,2.898000E-01,2.888000E-01,2.883000E-01,
							2.866000E-01,2.846000E-01,2.839000E-01,2.837000E-01,
							2.838000E-01,2.834000E-01,2.838000E-01,2.836000E-01,
							2.850000E-01,2.854000E-01,2.868000E-01,2.873000E-01,
							2.878000E-01,2.879000E-01,2.888000E-01,2.901000E-01,
							2.907000E-01,2.925000E-01,2.935000E-01,2.943000E-01,
							2.958000E-01,2.968000E-01,2.974000E-01,2.981000E-01,
							2.983000E-01,2.994000E-01,3.003000E-01,3.015000E-01,
							3.037000E-01,3.047000E-01,3.068000E-01,3.078000E-01,
							3.087000E-01,3.100000E-01,3.103000E-01]
				self.b[i] = [1.546000E-03,1.602000E-03,1.675000E-03,1.731000E-03,
							1.805000E-03,1.885000E-03,2.003000E-03,2.192000E-03,
							2.340000E-03,2.320000E-03,2.273000E-03,2.264000E-03,
							2.247000E-03,2.201000E-03,2.114000E-03,1.935000E-03,
							1.721000E-03,1.662000E-03,1.572000E-03,1.396000E-03,
							1.200000E-03,9.805000E-04,8.553000E-04,7.865000E-04,
							6.959000E-04,5.713000E-04,5.235000E-04,3.829000E-04,
							3.197000E-04,2.541000E-04,1.893000E-04,1.743000E-04,
							4.406000E-05,-8.638000E-05,-1.098000E-04,-2.454000E-04,
							-2.815000E-04,-3.171000E-04,-3.647000E-04,-3.680000E-04,
							-3.434000E-04,-3.263000E-04,-3.008000E-04,-2.962000E-04,
							-2.952000E-04,-3.028000E-04,-3.172000E-04,-3.224000E-04,
							-3.611000E-04,-3.837000E-04,-3.900000E-04,-4.151000E-04,
							-4.271000E-04,-4.684000E-04,-5.227000E-04,-5.476000E-04,
							-5.946000E-04,-6.572000E-04,-6.731000E-04,-7.291000E-04,
							-7.399000E-04,-7.642000E-04,-7.781000E-04,-7.858000E-04,
							-7.913000E-04,-8.462000E-04,-9.111000E-04,-9.293000E-04,
							-9.619000E-04,-9.795000E-04,-9.846000E-04,-1.005000E-03,
							-1.008000E-03,-1.000000E-03,-9.567000E-04,-9.458000E-04,
							-8.899000E-04,-8.788000E-04,-8.603000E-04,-8.333000E-04,
							-8.257000E-04,-7.758000E-04,-7.570000E-04,-7.091000E-04,
							-6.839000E-04,-6.855000E-04,-7.052000E-04,-7.067000E-04,
							-7.102000E-04,-7.100000E-04,-7.286000E-04,-7.342000E-04,
							-7.343000E-04,-7.255000E-04,-7.206000E-04,-6.930000E-04,
							-6.888000E-04,-6.872000E-04,-7.653000E-04,-8.808000E-04,
							-9.679000E-04,-9.972000E-04,-1.070000E-03,-1.103000E-03,
							-1.114000E-03,-1.141000E-03,-1.173000E-03,-1.176000E-03,
							-1.186000E-03,-1.204000E-03,-1.215000E-03,-1.247000E-03,
							-1.254000E-03,-1.265000E-03,-1.289000E-03,-1.313000E-03,
							-1.333000E-03,-1.331000E-03,-1.334000E-03,-1.322000E-03,
							-1.314000E-03,-1.295000E-03,-1.292000E-03,-1.304000E-03,
							-1.312000E-03,-1.325000E-03,-1.330000E-03,-1.333000E-03,
							-1.332000E-03,-1.327000E-03,-1.308000E-03,-1.301000E-03,
							-1.295000E-03,-1.280000E-03,-1.257000E-03,-1.213000E-03,
							-1.178000E-03,-1.048000E-03,-9.667000E-04,-9.475000E-04,
							-9.345000E-04,-9.250000E-04,-9.223000E-04]
				self.c1[i] = [-2.632000E+00,-2.549000E+00,-2.446000E+00,-2.318000E+00,
							-2.141000E+00,-2.016000E+00,-1.854000E+00,-1.671000E+00,
							-1.475000E+00,-1.411000E+00,-1.352000E+00,-1.285000E+00,
							-1.263000E+00,-1.222000E+00,-1.168000E+00,-1.111000E+00,
							-1.062000E+00,-1.030000E+00,-9.964000E-01,-9.180000E-01,
							-8.459000E-01,-7.708000E-01,-7.044000E-01,-6.670000E-01,
							-6.019000E-01,-5.508000E-01,-5.280000E-01,-4.443000E-01,
							-4.006000E-01,-3.530000E-01,-2.699000E-01,-2.599000E-01,
							-1.604000E-01,-4.195000E-02,-3.007000E-02,4.509000E-02,
							7.674000E-02,1.374000E-01,1.908000E-01,2.244000E-01,
							2.944000E-01,3.246000E-01,3.667000E-01,3.932000E-01,
							4.064000E-01,4.447000E-01,4.714000E-01,4.807000E-01,
							5.219000E-01,5.485000E-01,5.688000E-01,6.197000E-01,
							6.297000E-01,6.637000E-01,6.923000E-01,7.074000E-01,
							7.585000E-01,8.106000E-01,8.218000E-01,8.691000E-01,
							8.856000E-01,9.289000E-01,9.433000E-01,9.856000E-01,
							9.938000E-01,1.035000E+00,1.084000E+00,1.101000E+00,
							1.135000E+00,1.170000E+00,1.179000E+00,1.221000E+00,
							1.237000E+00,1.259000E+00,1.303000E+00,1.314000E+00,
							1.359000E+00,1.369000E+00,1.401000E+00,1.432000E+00,
							1.440000E+00,1.493000E+00,1.506000E+00,1.538000E+00,
							1.569000E+00,1.576000E+00,1.615000E+00,1.645000E+00,
							1.654000E+00,1.691000E+00,1.721000E+00,1.750000E+00,
							1.752000E+00,1.789000E+00,1.797000E+00,1.828000E+00,
							1.846000E+00,1.858000E+00,1.875000E+00,1.885000E+00,
							1.892000E+00,1.896000E+00,1.905000E+00,1.910000E+00,
							1.913000E+00,1.922000E+00,1.928000E+00,1.930000E+00,
							1.938000E+00,1.947000E+00,1.951000E+00,1.947000E+00,
							1.946000E+00,1.942000E+00,1.934000E+00,1.928000E+00,
							1.911000E+00,1.906000E+00,1.891000E+00,1.882000E+00,
							1.875000E+00,1.865000E+00,1.851000E+00,1.839000E+00,
							1.833000E+00,1.816000E+00,1.806000E+00,1.799000E+00,
							1.784000E+00,1.772000E+00,1.759000E+00,1.746000E+00,
							1.741000E+00,1.722000E+00,1.706000E+00,1.685000E+00,
							1.655000E+00,1.621000E+00,1.585000E+00,1.571000E+00,
							1.560000E+00,1.547000E+00,1.543000E+00]
				self.c2[i] = [-2.453000E+00,-2.370000E+00,-2.267000E+00,-2.143000E+00,
							-1.973000E+00,-1.854000E+00,-1.700000E+00,-1.529000E+00,
							-1.352000E+00,-1.292000E+00,-1.234000E+00,-1.167000E+00,
							-1.145000E+00,-1.104000E+00,-1.045000E+00,-9.850000E-01,
							-9.343000E-01,-8.996000E-01,-8.649000E-01,-7.849000E-01,
							-7.083000E-01,-6.274000E-01,-5.523000E-01,-5.105000E-01,
							-4.387000E-01,-3.839000E-01,-3.599000E-01,-2.702000E-01,
							-2.233000E-01,-1.736000E-01,-8.733000E-02,-7.703000E-02,
							3.263000E-02,1.474000E-01,1.580000E-01,2.307000E-01,
							2.618000E-01,3.194000E-01,3.684000E-01,4.003000E-01,
							4.701000E-01,5.007000E-01,5.429000E-01,5.698000E-01,
							5.835000E-01,6.232000E-01,6.504000E-01,6.593000E-01,
							6.973000E-01,7.218000E-01,7.410000E-01,7.887000E-01,
							7.979000E-01,8.289000E-01,8.555000E-01,8.696000E-01,
							9.189000E-01,9.716000E-01,9.827000E-01,1.029000E+00,
							1.045000E+00,1.085000E+00,1.099000E+00,1.137000E+00,
							1.144000E+00,1.180000E+00,1.225000E+00,1.240000E+00,
							1.271000E+00,1.302000E+00,1.311000E+00,1.347000E+00,
							1.361000E+00,1.380000E+00,1.418000E+00,1.427000E+00,
							1.467000E+00,1.476000E+00,1.505000E+00,1.533000E+00,
							1.541000E+00,1.586000E+00,1.597000E+00,1.625000E+00,
							1.653000E+00,1.659000E+00,1.688000E+00,1.711000E+00,
							1.718000E+00,1.747000E+00,1.770000E+00,1.790000E+00,
							1.792000E+00,1.823000E+00,1.830000E+00,1.858000E+00,
							1.875000E+00,1.887000E+00,1.902000E+00,1.907000E+00,
							1.911000E+00,1.913000E+00,1.918000E+00,1.920000E+00,
							1.922000E+00,1.930000E+00,1.933000E+00,1.935000E+00,
							1.939000E+00,1.943000E+00,1.944000E+00,1.934000E+00,
							1.932000E+00,1.925000E+00,1.913000E+00,1.907000E+00,
							1.890000E+00,1.885000E+00,1.869000E+00,1.861000E+00,
							1.854000E+00,1.845000E+00,1.832000E+00,1.820000E+00,
							1.815000E+00,1.798000E+00,1.789000E+00,1.782000E+00,
							1.768000E+00,1.758000E+00,1.748000E+00,1.738000E+00,
							1.733000E+00,1.718000E+00,1.705000E+00,1.690000E+00,
							1.666000E+00,1.641000E+00,1.613000E+00,1.602000E+00,
							1.593000E+00,1.581000E+00,1.579000E+00]
				self.sigma[i] = [4.124000E-01,4.161000E-01,4.196000E-01,4.200000E-01,
							4.175000E-01,4.160000E-01,4.148000E-01,4.170000E-01,
							4.210000E-01,4.216000E-01,4.204000E-01,4.188000E-01,
							4.178000E-01,4.156000E-01,4.112000E-01,4.062000E-01,
							4.011000E-01,4.000000E-01,3.991000E-01,3.952000E-01,
							3.941000E-01,3.898000E-01,3.866000E-01,3.863000E-01,
							3.870000E-01,3.872000E-01,3.869000E-01,3.841000E-01,
							3.811000E-01,3.783000E-01,3.745000E-01,3.739000E-01,
							3.705000E-01,3.692000E-01,3.693000E-01,3.695000E-01,
							3.690000E-01,3.672000E-01,3.659000E-01,3.650000E-01,
							3.631000E-01,3.622000E-01,3.611000E-01,3.604000E-01,
							3.600000E-01,3.589000E-01,3.578000E-01,3.573000E-01,
							3.563000E-01,3.558000E-01,3.553000E-01,3.542000E-01,
							3.540000E-01,3.534000E-01,3.535000E-01,3.533000E-01,
							3.521000E-01,3.513000E-01,3.512000E-01,3.507000E-01,
							3.503000E-01,3.495000E-01,3.492000E-01,3.486000E-01,
							3.484000E-01,3.470000E-01,3.462000E-01,3.460000E-01,
							3.454000E-01,3.445000E-01,3.443000E-01,3.436000E-01,
							3.434000E-01,3.434000E-01,3.435000E-01,3.434000E-01,
							3.421000E-01,3.417000E-01,3.403000E-01,3.390000E-01,
							3.386000E-01,3.366000E-01,3.360000E-01,3.343000E-01,
							3.328000E-01,3.324000E-01,3.292000E-01,3.265000E-01,
							3.256000E-01,3.231000E-01,3.214000E-01,3.207000E-01,
							3.206000E-01,3.195000E-01,3.191000E-01,3.174000E-01,
							3.160000E-01,3.149000E-01,3.135000E-01,3.125000E-01,
							3.118000E-01,3.114000E-01,3.104000E-01,3.097000E-01,
							3.093000E-01,3.080000E-01,3.069000E-01,3.065000E-01,
							3.055000E-01,3.041000E-01,3.038000E-01,3.020000E-01,
							3.017000E-01,3.007000E-01,2.990000E-01,2.989000E-01,
							2.985000E-01,2.986000E-01,2.991000E-01,2.996000E-01,
							2.999000E-01,3.001000E-01,2.998000E-01,2.997000E-01,
							2.997000E-01,2.991000E-01,2.991000E-01,2.992000E-01,
							2.996000E-01,2.998000E-01,2.998000E-01,2.998000E-01,
							2.996000E-01,2.988000E-01,2.979000E-01,2.971000E-01,
							2.969000E-01,2.954000E-01,2.940000E-01,2.932000E-01,
							2.928000E-01,2.924000E-01,2.923000E-01]
			elif i == 3:
				self.a[i] = [5.925000E-01,5.929000E-01,5.929000E-01,5.917000E-01,
							5.874000E-01,5.833000E-01,5.775000E-01,5.716000E-01,
							5.650000E-01,5.630000E-01,5.608000E-01,5.581000E-01,
							5.572000E-01,5.561000E-01,5.544000E-01,5.536000E-01,
							5.541000E-01,5.539000E-01,5.533000E-01,5.500000E-01,
							5.483000E-01,5.457000E-01,5.428000E-01,5.401000E-01,
							5.358000E-01,5.322000E-01,5.307000E-01,5.248000E-01,
							5.216000E-01,5.184000E-01,5.126000E-01,5.117000E-01,
							5.032000E-01,4.932000E-01,4.922000E-01,4.866000E-01,
							4.840000E-01,4.789000E-01,4.742000E-01,4.712000E-01,
							4.647000E-01,4.620000E-01,4.580000E-01,4.554000E-01,
							4.540000E-01,4.497000E-01,4.466000E-01,4.456000E-01,
							4.418000E-01,4.395000E-01,4.378000E-01,4.337000E-01,
							4.328000E-01,4.292000E-01,4.259000E-01,4.245000E-01,
							4.196000E-01,4.148000E-01,4.138000E-01,4.097000E-01,
							4.083000E-01,4.044000E-01,4.031000E-01,3.993000E-01,
							3.985000E-01,3.943000E-01,3.901000E-01,3.887000E-01,
							3.858000E-01,3.829000E-01,3.820000E-01,3.783000E-01,
							3.769000E-01,3.748000E-01,3.706000E-01,3.696000E-01,
							3.645000E-01,3.635000E-01,3.601000E-01,3.565000E-01,
							3.557000E-01,3.498000E-01,3.484000E-01,3.445000E-01,
							3.405000E-01,3.398000E-01,3.348000E-01,3.314000E-01,
							3.303000E-01,3.267000E-01,3.234000E-01,3.195000E-01,
							3.193000E-01,3.153000E-01,3.144000E-01,3.114000E-01,
							3.093000E-01,3.078000E-01,3.051000E-01,3.033000E-01,
							3.024000E-01,3.019000E-01,3.007000E-01,3.001000E-01,
							2.996000E-01,2.984000E-01,2.972000E-01,2.970000E-01,
							2.959000E-01,2.942000E-01,2.936000E-01,2.930000E-01,
							2.930000E-01,2.927000E-01,2.925000E-01,2.922000E-01,
							2.926000E-01,2.927000E-01,2.932000E-01,2.936000E-01,
							2.939000E-01,2.947000E-01,2.954000E-01,2.959000E-01,
							2.962000E-01,2.970000E-01,2.975000E-01,2.980000E-01,
							2.990000E-01,2.997000E-01,3.007000E-01,3.015000E-01,
							3.018000E-01,3.027000E-01,3.032000E-01,3.039000E-01,
							3.048000E-01,3.060000E-01,3.074000E-01,3.080000E-01,
							3.086000E-01,3.095000E-01,3.097000E-01]
				self.b[i] = [1.525000E-03,1.556000E-03,1.609000E-03,1.661000E-03,
							1.706000E-03,1.760000E-03,1.833000E-03,1.893000E-03,
							1.958000E-03,1.949000E-03,1.911000E-03,1.891000E-03,
							1.878000E-03,1.828000E-03,1.738000E-03,1.596000E-03,
							1.429000E-03,1.368000E-03,1.320000E-03,1.199000E-03,
							1.015000E-03,8.037000E-04,6.527000E-04,5.784000E-04,
							4.681000E-04,3.901000E-04,3.543000E-04,2.194000E-04,
							1.612000E-04,1.020000E-04,-3.932000E-06,-1.064000E-05,
							-1.151000E-04,-2.150000E-04,-2.291000E-04,-3.079000E-04,
							-3.132000E-04,-3.247000E-04,-3.494000E-04,-3.676000E-04,
							-3.968000E-04,-4.047000E-04,-4.174000E-04,-4.263000E-04,
							-4.309000E-04,-4.296000E-04,-4.326000E-04,-4.349000E-04,
							-4.512000E-04,-4.615000E-04,-4.701000E-04,-5.022000E-04,
							-5.113000E-04,-5.323000E-04,-5.484000E-04,-5.598000E-04,
							-5.875000E-04,-6.383000E-04,-6.494000E-04,-7.040000E-04,
							-7.219000E-04,-7.723000E-04,-7.889000E-04,-8.265000E-04,
							-8.347000E-04,-8.677000E-04,-8.879000E-04,-8.934000E-04,
							-9.025000E-04,-9.195000E-04,-9.250000E-04,-9.438000E-04,
							-9.515000E-04,-9.537000E-04,-9.484000E-04,-9.463000E-04,
							-9.226000E-04,-9.164000E-04,-8.986000E-04,-8.742000E-04,
							-8.699000E-04,-8.203000E-04,-8.095000E-04,-7.856000E-04,
							-7.709000E-04,-7.649000E-04,-7.287000E-04,-7.225000E-04,
							-7.208000E-04,-7.181000E-04,-7.165000E-04,-7.081000E-04,
							-7.079000E-04,-7.010000E-04,-6.995000E-04,-7.030000E-04,
							-7.024000E-04,-7.108000E-04,-7.266000E-04,-7.561000E-04,
							-7.895000E-04,-8.025000E-04,-8.364000E-04,-8.560000E-04,
							-8.729000E-04,-9.003000E-04,-9.194000E-04,-9.265000E-04,
							-9.532000E-04,-9.686000E-04,-9.738000E-04,-1.004000E-03,
							-1.010000E-03,-1.023000E-03,-1.044000E-03,-1.063000E-03,
							-1.072000E-03,-1.074000E-03,-1.081000E-03,-1.086000E-03,
							-1.090000E-03,-1.099000E-03,-1.107000E-03,-1.109000E-03,
							-1.109000E-03,-1.104000E-03,-1.104000E-03,-1.105000E-03,
							-1.106000E-03,-1.108000E-03,-1.106000E-03,-1.103000E-03,
							-1.099000E-03,-1.091000E-03,-1.076000E-03,-1.061000E-03,
							-1.035000E-03,-9.816000E-04,-9.480000E-04,-9.331000E-04,
							-9.262000E-04,-9.145000E-04,-9.120000E-04]
				self.c1[i] = [-2.586000E+00,-2.494000E+00,-2.383000E+00,-2.248000E+00,
							-2.068000E+00,-1.957000E+00,-1.826000E+00,-1.681000E+00,
							-1.524000E+00,-1.465000E+00,-1.403000E+00,-1.341000E+00,
							-1.319000E+00,-1.281000E+00,-1.222000E+00,-1.166000E+00,
							-1.112000E+00,-1.085000E+00,-1.053000E+00,-9.764000E-01,
							-9.003000E-01,-8.119000E-01,-7.450000E-01,-7.032000E-01,
							-6.376000E-01,-5.869000E-01,-5.660000E-01,-4.847000E-01,
							-4.423000E-01,-3.997000E-01,-3.204000E-01,-3.097000E-01,
							-2.044000E-01,-8.749000E-02,-7.589000E-02,-7.736000E-03,
							1.854000E-02,7.174000E-02,1.223000E-01,1.546000E-01,
							2.192000E-01,2.457000E-01,2.837000E-01,3.090000E-01,
							3.216000E-01,3.611000E-01,3.911000E-01,4.009000E-01,
							4.408000E-01,4.648000E-01,4.821000E-01,5.253000E-01,
							5.350000E-01,5.720000E-01,6.043000E-01,6.187000E-01,
							6.668000E-01,7.153000E-01,7.249000E-01,7.667000E-01,
							7.810000E-01,8.198000E-01,8.334000E-01,8.720000E-01,
							8.803000E-01,9.236000E-01,9.655000E-01,9.785000E-01,
							1.006000E+00,1.035000E+00,1.043000E+00,1.080000E+00,
							1.094000E+00,1.113000E+00,1.153000E+00,1.163000E+00,
							1.207000E+00,1.216000E+00,1.247000E+00,1.278000E+00,
							1.285000E+00,1.334000E+00,1.346000E+00,1.379000E+00,
							1.414000E+00,1.420000E+00,1.461000E+00,1.489000E+00,
							1.498000E+00,1.529000E+00,1.557000E+00,1.590000E+00,
							1.591000E+00,1.622000E+00,1.629000E+00,1.652000E+00,
							1.666000E+00,1.677000E+00,1.697000E+00,1.711000E+00,
							1.719000E+00,1.723000E+00,1.733000E+00,1.738000E+00,
							1.741000E+00,1.750000E+00,1.757000E+00,1.759000E+00,
							1.766000E+00,1.776000E+00,1.779000E+00,1.781000E+00,
							1.781000E+00,1.781000E+00,1.778000E+00,1.778000E+00,
							1.771000E+00,1.769000E+00,1.763000E+00,1.759000E+00,
							1.755000E+00,1.746000E+00,1.736000E+00,1.730000E+00,
							1.727000E+00,1.717000E+00,1.712000E+00,1.708000E+00,
							1.698000E+00,1.691000E+00,1.680000E+00,1.670000E+00,
							1.665000E+00,1.653000E+00,1.643000E+00,1.631000E+00,
							1.614000E+00,1.591000E+00,1.571000E+00,1.563000E+00,
							1.556000E+00,1.546000E+00,1.543000E+00]
				self.c2[i] = [-2.412000E+00,-2.320000E+00,-2.211000E+00,-2.080000E+00,
							-1.907000E+00,-1.801000E+00,-1.675000E+00,-1.538000E+00,
							-1.391000E+00,-1.333000E+00,-1.271000E+00,-1.209000E+00,
							-1.188000E+00,-1.150000E+00,-1.089000E+00,-1.031000E+00,
							-9.757000E-01,-9.464000E-01,-9.122000E-01,-8.307000E-01,
							-7.531000E-01,-6.623000E-01,-5.906000E-01,-5.457000E-01,
							-4.751000E-01,-4.215000E-01,-3.992000E-01,-3.136000E-01,
							-2.688000E-01,-2.241000E-01,-1.401000E-01,-1.286000E-01,
							-1.845000E-02,9.790000E-02,1.092000E-01,1.757000E-01,
							2.011000E-01,2.524000E-01,3.005000E-01,3.317000E-01,
							3.951000E-01,4.215000E-01,4.591000E-01,4.841000E-01,
							4.965000E-01,5.359000E-01,5.652000E-01,5.746000E-01,
							6.124000E-01,6.350000E-01,6.512000E-01,6.910000E-01,
							7.000000E-01,7.342000E-01,7.645000E-01,7.781000E-01,
							8.243000E-01,8.710000E-01,8.802000E-01,9.200000E-01,
							9.338000E-01,9.707000E-01,9.835000E-01,1.020000E+00,
							1.027000E+00,1.067000E+00,1.105000E+00,1.117000E+00,
							1.142000E+00,1.167000E+00,1.175000E+00,1.207000E+00,
							1.219000E+00,1.236000E+00,1.272000E+00,1.280000E+00,
							1.320000E+00,1.328000E+00,1.355000E+00,1.383000E+00,
							1.389000E+00,1.433000E+00,1.443000E+00,1.472000E+00,
							1.501000E+00,1.507000E+00,1.540000E+00,1.565000E+00,
							1.572000E+00,1.598000E+00,1.621000E+00,1.648000E+00,
							1.649000E+00,1.676000E+00,1.681000E+00,1.700000E+00,
							1.713000E+00,1.722000E+00,1.738000E+00,1.749000E+00,
							1.754000E+00,1.757000E+00,1.764000E+00,1.767000E+00,
							1.769000E+00,1.775000E+00,1.781000E+00,1.782000E+00,
							1.787000E+00,1.794000E+00,1.795000E+00,1.794000E+00,
							1.793000E+00,1.790000E+00,1.785000E+00,1.783000E+00,
							1.775000E+00,1.773000E+00,1.766000E+00,1.762000E+00,
							1.758000E+00,1.749000E+00,1.740000E+00,1.734000E+00,
							1.731000E+00,1.722000E+00,1.717000E+00,1.713000E+00,
							1.704000E+00,1.698000E+00,1.688000E+00,1.679000E+00,
							1.675000E+00,1.665000E+00,1.658000E+00,1.649000E+00,
							1.636000E+00,1.618000E+00,1.602000E+00,1.596000E+00,
							1.589000E+00,1.581000E+00,1.579000E+00]
				self.sigma[i] = [4.057000E-01,4.070000E-01,4.085000E-01,4.083000E-01,
							4.057000E-01,4.047000E-01,4.042000E-01,4.045000E-01,
							4.044000E-01,4.036000E-01,4.021000E-01,4.006000E-01,
							4.000000E-01,3.985000E-01,3.951000E-01,3.915000E-01,
							3.885000E-01,3.874000E-01,3.865000E-01,3.847000E-01,
							3.838000E-01,3.815000E-01,3.796000E-01,3.789000E-01,
							3.788000E-01,3.785000E-01,3.783000E-01,3.762000E-01,
							3.747000E-01,3.729000E-01,3.696000E-01,3.692000E-01,
							3.660000E-01,3.634000E-01,3.631000E-01,3.616000E-01,
							3.611000E-01,3.600000E-01,3.588000E-01,3.580000E-01,
							3.560000E-01,3.552000E-01,3.542000E-01,3.535000E-01,
							3.532000E-01,3.522000E-01,3.515000E-01,3.513000E-01,
							3.502000E-01,3.495000E-01,3.492000E-01,3.484000E-01,
							3.482000E-01,3.474000E-01,3.466000E-01,3.462000E-01,
							3.453000E-01,3.446000E-01,3.445000E-01,3.439000E-01,
							3.437000E-01,3.430000E-01,3.428000E-01,3.421000E-01,
							3.419000E-01,3.411000E-01,3.401000E-01,3.398000E-01,
							3.394000E-01,3.390000E-01,3.389000E-01,3.384000E-01,
							3.382000E-01,3.377000E-01,3.366000E-01,3.363000E-01,
							3.350000E-01,3.347000E-01,3.339000E-01,3.329000E-01,
							3.327000E-01,3.306000E-01,3.300000E-01,3.286000E-01,
							3.270000E-01,3.267000E-01,3.244000E-01,3.224000E-01,
							3.218000E-01,3.193000E-01,3.172000E-01,3.150000E-01,
							3.148000E-01,3.132000E-01,3.129000E-01,3.117000E-01,
							3.107000E-01,3.101000E-01,3.087000E-01,3.073000E-01,
							3.066000E-01,3.063000E-01,3.051000E-01,3.044000E-01,
							3.039000E-01,3.028000E-01,3.020000E-01,3.018000E-01,
							3.011000E-01,3.002000E-01,2.997000E-01,2.986000E-01,
							2.984000E-01,2.975000E-01,2.968000E-01,2.961000E-01,
							2.956000E-01,2.955000E-01,2.950000E-01,2.947000E-01,
							2.947000E-01,2.946000E-01,2.944000E-01,2.943000E-01,
							2.943000E-01,2.944000E-01,2.945000E-01,2.946000E-01,
							2.947000E-01,2.948000E-01,2.949000E-01,2.949000E-01,
							2.947000E-01,2.944000E-01,2.941000E-01,2.938000E-01,
							2.937000E-01,2.933000E-01,2.929000E-01,2.928000E-01,
							2.926000E-01,2.924000E-01,2.923000E-01]

		## Unit conversion
		## Original unit is cm/s2 (gal)
		self.imt_scaling = {"g": 0.01/g, "mg": 10./g, "ms2": 1E-2,
						"gal": 1.0, "cms2": 1.0}

	def __call__(self, M, d, h=0., imt="PGA", T=0, imt_unit="g", epsilon=0,
				soil_type="rock", vs30=None, kappa=None, mechanism="normal",
				damping=5):
		"""
		Compute ground motion for given magnitude, distance, depth,
		soil type, and fault mechanism.

		:param M:
			Float or float array, magnitude(s).
			Note that if d is an array, M must be a float.
		:param d:
			Float or float array, distance(s) in km.
			Note that if M is an array, d must be a float.
		:param h:
			float, focal depth in km
			(default: 0., i.e. assume d is hypocentral distance).
		:param imt:
			str, one of the supported intensity measure types: "PGA" or "SA"
			(default: "PGA").
		:param T:
			float, spectral period of considered IMT. Ignored if IMT == "PGA"
			(default: 0).
		:param imt_unit:
			str, unit in which intensities should be expressed
			(default: "g")
		:param epsilon:
			float, number of standard deviations above or below the mean
			(default: 0).
		:param soil_type:
			str, either "rock" or "alluvium":
				Rock: VS >= 800 m/s
				Alluvium: 300 <= VS < 800 m/s
			(default: "rock")
		:param vs30:
			float, shear-wave velocity in the upper 30 m (in m/s).
			If not None, it takes precedence over the soil_type parameter
			(default: None).
		:param kappa:
			float, kappa value, in seconds. Ignored in this GMPE
			(default: None)
		:param mechanism:
			str, fault mechanism: either "normal", "reverse" or "strike-slip".
			Ignored in this GMPE.
		:param damping:
			float, damping in percent. Supported value are 5, 7, 10, and 20.
			(default: 5)

		:return:
			Returns a float array with ground-motion intensities
		"""
		scale_factor = self.imt_scaling[imt_unit.lower()]

		imt = imt.upper()
		if imt == "PGA":
			imt = "SA"
			T = self.imt_periods[imt][-1]
			damping_index = 0
			## Note: slicing below [-1:] is necessary to ensure result is array!
			A = self.a[damping_index][-1:]
			B = self.b[damping_index][-1:]
			C1 = self.c1[damping_index][-1:]
			C2 = self.c2[damping_index][-1:]
			S = self.sigma[damping_index][-1:]
		else:
			if not self.has_imt(imt):
				raise IMTUndefinedError(imt)

			if T < self.Tmin(imt) or T > self.Tmax(imt):
				raise PeriodUndefinedError(imt, T)
				#return None

			try:
				damping_index = self.dampings.index(damping)
			except:
				raise DampingNotSupportedError(damping)
			else:
				a = self.a[damping_index]
				b = self.b[damping_index]
				c1 = self.c1[damping_index]
				c2 = self.c2[damping_index]
				sigma = self.sigma[damping_index]
				sa_periods = self.imt_periods["SA"]
				A = interpolate(sa_periods, a, [T])
				B = interpolate(sa_periods, b, [T])
				C1 = interpolate(sa_periods, c1, [T])
				C2 = interpolate(sa_periods, c2, [T])
				S = interpolate(sa_periods, sigma, [T])

		if vs30 != None:
			if vs30 >= 800:
				soil_type = "rock"
			elif 300 <= vs30 < 800:
				soil_type = "alluvium"
			else:
				raise VS30OutOfRangeError(vs30)

		if soil_type.lower() == "alluvium":
			C = C2
		else:
			# default is rock
			C = C1

		r = np.sqrt(d*d + h*h)
		log_ah = A*M + B*r - np.log10(r) + C + epsilon * S
		ah = (10**log_ah)
		ah *= scale_factor

		return ah

	def log_sigma(self, M=5., d=10., h=0., imt="PGA", T=0, soil_type="rock",
				vs30=None, kappa=None, mechanism="normal", damping=5):
		"""
		Return standard deviation in log10 space
		Note that this value is independent of data scaling (gal, g, m/s**2, ...)

		:param M:
			Float or float array, magnitude(s).
			Note that if d is an array, M must be a float.
		:param d:
			Float or float array, distance(s) in km.
			Note that if M is an array, d must be a float.
		:param h:
			float, focal depth in km
			(default: 0., i.e. assume d is hypocentral distance).
		:param imt:
			str, one of the supported intensity measure types: "PGA" or "SA"
			(default: "PGA").
		:param T:
			float, spectral period of considered IMT. Ignored if IMT == "PGA"
			(default: 0).
		:param soil_type:
			str, either "rock" or "alluvium":
				Rock: VS >= 800 m/s
				Alluvium: 300 <= VS < 800 m/s
			(default: "rock")
		:param vs30:
			float, shear-wave velocity in the upper 30 m (in m/s).
			If not None, it takes precedence over the soil_type parameter
			(default: None).
		:param kappa:
			float, kappa value, in seconds. Ignored in this GMPE
			(default: None)
		:param mechanism:
			str, fault mechanism: either "normal", "reverse" or "strike-slip".
			Ignored in this GMPE.
		:param damping:
			float, damping in percent. Supported value are 5, 7, 10, and 20.
			(default: 5)
		"""
		imt = imt.upper()
		if imt == "PGA":
			damping_index = 0
			return np.array(self.sigma[damping_index][-1])
		else:
			if not self.has_imt(imt):
				raise IMTUndefinedError(imt)
			if T < self.Tmin(imt) or T > self.Tmax(imt):
				raise PeriodUndefinedError(imt, T)
			try:
				damping_index = self.dampings.index(damping)
			except:
				raise DampingNotSupportedError(damping)
			else:
				sigma = self.sigma[damping_index]
				return interpolate(self.imt_periods["SA"], sigma, [T])

	def is_rake_dependent(self):
		"""
		Indicate whether or not GMPE depends on rake of the source
		"""
		return False

	def get_crisis_periods(self):
		"""
		Return array of max. 40 spectral periods to be used with CRISIS
		"""
		freqs = np.array([0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55,
						0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 1.0, 1.5, 2.0, 2.5,
						3.0, 3.5, 4.0, 4.5, 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0,
						8.5, 9.0, 10.0, 15.0, 20.0, 25.0, 30.0, 34.0])
		periods = 1.0 / freqs
		periods = periods[::-1]
		return periods

	def plot_figure3(self, soil_type="rock"):
		"""
		Plot Figure 3 in the paper of Berge-Thierry et al. (2003)

		:param soil_type:
			str, either "rock" or "alluvium" (default: "rock").
		"""
		self.plot_spectrum(mags=[6.5], d=20, plot_style="loglog", plot_freq=True,
						Tmin=1E-2, Tmax=10, amin=1E-2, amax=10, include_pgm=False,
						soil_type=soil_type, want_minor_grid=True)

	def plot_figure7(self, soil_type="rock"):
		"""
		Plot Figure 7 in the paper of Berge-Thierry et al. (2003)

		:param soil_type:
			str, either "rock" or "alluvium" (default: "rock").
		"""
		self.plot_spectrum(mags=[5.5], d=20, plot_style="loglog", plot_freq=True,
						Tmin=1E-2, Tmax=10, amin=1E-2, amax=10, include_pgm=False,
						soil_type=soil_type, want_minor_grid=True)

	def plot_figure10(self):
		"""
		Plot Figure 10 in the paper of Berge-Thierry et al. (2003)
		"""
		self.plot_spectrum(mags=[6.], d=30, plot_style="loglog", plot_freq=True,
						Tmin=1E-2, Tmax=10, epsilon=1, amin=1E-4, amax=5,
						include_pgm=False, soil_type="rock", want_minor_grid=True)

	def plot_figure11(self):
		"""
		Plot Figure 11 in the paper of Berge-Thierry et al. (2003)
		"""
		self.plot_spectrum(mags=[6.], d=30, plot_style="loglog", plot_freq=True,
							Tmin=1E-2, Tmax=10, epsilon=1, amin=1E-4, amax=5,
							include_pgm=False, soil_type="alluvium",
							want_minor_grid=True)


if __name__ == "__main__":
	pass

